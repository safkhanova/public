Alembic (the migration framework used by Flask-Migrate)

$ flask db init - create the migration repository for microblog
$ flask db migrate - does not make any changes to the database
$ flask db upgrade - To apply the changes to the database, the

One of the packages that implement password hashing is Werkzeug,
As an additional measure, if you hash the same password multiple times, you will get different results,
so this makes it impossible to identify if two users have the same password by looking at their hashes. (???)


When you add any methods that match the pattern validate_<field_name>,
WTForms takes those as custom validators and invokes them in addition to the stock validators.

FLASK_ENV=development
FLASK_ENV=production
(if you turn on development env you will not see custom error pages)

EMAIL:
to test on local
set env variables:
MAIL_SERVER=localhost
MAIL_PORT=8025

to use gmail:
export MAIL_SERVER=smtp.googlemail.com
export MAIL_PORT=587
export MAIL_USE_TLS=1
export MAIL_USERNAME=<your-gmail-username>
export MAIL_PASSWORD=<your-gmail-password>
https://support.google.com/accounts/answer/6010255?hl=en
https://sendgrid.com/blog/sending-emails-from-python-flask-applications-with-twilio-sendgrid/



The RotatingFileHandler class is nice because it rotates the logs, ensuring that the log files do not grow too large when the application runs for a long time.
self-referential relationship - A relationship in which instances of a class are linked to other instances of the same class is called a

'''
 flask db init
 flask db migrate -m "users table"
 flask db upgrade
flask db downgrade command, which undoes the last migration

'''
